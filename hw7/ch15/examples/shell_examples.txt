>>> import PyPDF2
>>> pdf_file_obj = PyPDF2.PdfFileReader(pdf_file_obj)
>>> pdf_file_obj = open('meetingminutes.pdf', 'rb')
>>> pdf_reader = PyPDF2.PdfFileReader(pdf_file_obj)
>>> pdf_reader.numPages
19
>>> page_obj = pdf_reader.getPage(0)
>>> page_obj.extractText()
'OOFFFFIICCIIAALL  BBOOAARRDD  MMIINNUUTTEESS   Meeting of \nMarch 7\n, 2014\n        \n     The Board of Elementary and Secondary Education shall provide leadership and \ncreate policies for education that expand opportunities for children, empower \nfamilies and communities, and advance Louisiana in an increasingly \ncompetitive glob\nal market.\n BOARD \n of ELEMENTARY\n and \n SECONDARY\n EDUCATION\n  '
>>> pdf_file_obj.close()
>>> pwd
'/Users/haleyharris/Desktop/belhavencsc/csc221/hw7/ch15/examples'
>>> pdf_reader = PyPDF2.PdfFileReader(open('encrypted.pdf', 'rb'))
>>> pdf_reader.isEncrypted
True
>>> pdf_reader.getPage(0)
>>> pdf_reader = PyPDF2.PdfFileReader(open('encrypted.pdf', 'rb'))
>>> pdf_reader.decrypt('rosebud')
1
>>> page_obj = pdf_reader.getPage(0)
>>> page_obj = pdf_reader.getPage(0)
>>> page_obj = pdf_reader.getPage(0)
>>> pdf_file = open('meetingminutes.pdf', 'rb')
>>> pdf2_file = open('meetingminutes2.pdf', 'rb')
>>> pdf_reader = PyPDF2.PdfFileReader(pdf_file)
>>> pdf2_reader = PyPDF2.PdfFileReader(pdf2_file)
>>> pdf_writer = PyPDF2.PdfFileWriter()
>>> for page_num in range(pdf_reader.numPages):
...     page_obj = pdf_reader.getPage(page_num)
...     pdf_writer.addPage(page_obj)
...
>>> for page_num in range(pdf2_reader.numPages)
>>> for page_num in range(pdf2_reader.numPages):
...     page_obj = pdf2_reader.getPage(page_num)
...     pdf_writer.addPage(page_obj)
...
>>> pdf_output_file = open('combinedminutes.pdf', 'wb')
>>> pdf_output_file = open('combinedminutes.pdf', 'wb')
>>> pdf_writer.write(pdf_output_file)
>>> pdf_output_file.close()
>>> pdf_file.close()
>>> pdf2_file.close()
>>> minutes_file = open('meetingminutes.pdf', 'rb')
>>> pdf_reader = PyPDF2.PdfFileReader(minutes_file)
>>> page = pdf_reader.getPage(0)
>>> page.rotateClockwise(90)
{'/Contents': [IndirectObject(961, 0),
  IndirectObject(962, 0),
  IndirectObject(963, 0),
  IndirectObject(964, 0),
  IndirectObject(965, 0),
  IndirectObject(966, 0),
  IndirectObject(967, 0),
  IndirectObject(968, 0)],
 '/CropBox': [0, 0, 612, 792],
 '/MediaBox': [0, 0, 612, 792],
 '/Parent': {'/Count': 9,
  '/Kids': [IndirectObject(959, 0),
   IndirectObject(1, 0),
   IndirectObject(11, 0),
   IndirectObject(13, 0),
   IndirectObject(15, 0),
   IndirectObject(17, 0),
   IndirectObject(19, 0),
   IndirectObject(24, 0),
   IndirectObject(26, 0)],
  '/Parent': {'/Count': 19,
   '/Kids': [IndirectObject(953, 0),
    IndirectObject(954, 0),
    IndirectObject(955, 0)],
   '/Type': '/Pages'},
  '/Type': '/Pages'},
 '/Resources': {'/ColorSpace': {'/CS0': ['/ICCBased', IndirectObject(969, 0)],
   '/CS1': ['/ICCBased', IndirectObject(970, 0)],
   '/CS2': ['/ICCBased', IndirectObject(970, 0)]},
  '/ExtGState': {'/GS0': {'/AIS': <PyPDF2.generic.BooleanObject at 0x11261b320>,
    '/BM': '/Normal',
    '/CA': 1,
    '/OP': <PyPDF2.generic.BooleanObject at 0x11262de10>,
    '/OPM': 1,
    '/SA': <PyPDF2.generic.BooleanObject at 0x11262dfd0>,
    '/SMask': '/None',
    '/Type': '/ExtGState',
    '/ca': 1,
    '/op': <PyPDF2.generic.BooleanObject at 0x11262d6d8>}},
  '/Font': {'/TT0': {'/BaseFont': '/Arial-Black',
    '/Encoding': '/WinAnsiEncoding',
    '/FirstChar': 0,
    '/FontDescriptor': {'/Ascent': 1083,
     '/CapHeight': 716,
     '/Descent': -307,
     '/Flags': 32,
     '/FontBBox': [-194, -307, 1688, 1083],
     '/FontFamily': 'Arial Black',
     '/FontName': '/Arial-Black',
     '/FontStretch': '/Normal',
     '/FontWeight': 900,
     '/ItalicAngle': 0,
     '/StemV': 200,
     '/Type': '/FontDescriptor',
     '/XHeight': 519},
    '/LastChar': 255,
    '/Subtype': '/TrueType',
    '/Type': '/Font',
    '/Widths': [750,
     333,
     333,
     333,
     333,
     333,
     333,
     333,
     333,
     333,
     333,
     333,
     333,
     333,
     333,
     333,
     333,
     333,
     333,
     333,
     333,
     333,
     333,
     333,
     333,
     333,
     333,
     333,
     333,
     333,
     333,
     333,
     333,
     333,
     500,
     660,
     667,
     1000,
     889,
     278,
     389,
     389,
     556,
     660,
     333,
     333,
     333,
     278,
     667,
     667,
     667,
     667,
     667,
     667,
     667,
     667,
     667,
     667,
     333,
     333,
     660,
     660,
     660,
     611,
     740,
     778,
     778,
     778,
     778,
     722,
     667,
     833,
     833,
     389,
     667,
     833,
     667,
     944,
     833,
     833,
     722,
     833,
     778,
     722,
     722,
     833,
     778,
     1000,
     778,
     778,
     722,
     389,
     278,
     389,
     660,
     500,
     333,
     667,
     667,
     667,
     667,
     667,
     389,
     667,
     667,
     333,
     333,
     667,
     333,
     1000,
     667,
     667,
     667,
     667,
     444,
     611,
     444,
     667,
     611,
     944,
     667,
     611,
     556,
     389,
     278,
     389,
     660,
     500,
     667,
     500,
     278,
     667,
     500,
     1000,
     667,
     667,
     333,
     1000,
     722,
     333,
     1000,
     500,
     722,
     500,
     500,
     278,
     278,
     500,
     500,
     500,
     500,
     1000,
     333,
     950,
     611,
     333,
     1000,
     500,
     556,
     778,
     333,
     333,
     667,
     667,
     660,
     667,
     278,
     667,
     333,
     800,
     400,
     667,
     660,
     333,
     800,
     500,
     400,
     660,
     400,
     400,
     333,
     667,
     850,
     333,
     333,
     400,
     400,
     667,
     1000,
     1000,
     1000,
     611,
     778,
     778,
     778,
     778,
     778,
     778,
     1000,
     778,
     722,
     722,
     722,
     722,
     389,
     389,
     389,
     389,
     778,
     833,
     833,
     833,
     833,
     833,
     833,
     660,
     833,
     833,
     833,
     833,
     833,
     778,
     722,
     667,
     667,
     667,
     667,
     667,
     667,
     667,
     1000,
     667,
     667,
     667,
     667,
     667,
     333,
     333,
     333,
     333,
     667,
     667,
     667,
     667,
     667,
     667,
     667,
     660,
     667,
     667,
     667,
     667,
     667,
     611,
     667,
     611]},
   '/TT1': {'/BaseFont': '/ArialMT',
    '/Encoding': '/WinAnsiEncoding',
    '/FirstChar': 0,
    '/FontDescriptor': {'/Ascent': 1006,
     '/CapHeight': 716,
     '/Descent': -325,
     '/Flags': 32,
     '/FontBBox': [-665, -325, 2000, 1006],
     '/FontFamily': 'Arial',
     '/FontName': '/ArialMT',
     '/FontStretch': '/Normal',
     '/FontWeight': 400,
     '/ItalicAngle': 0,
     '/StemV': 88,
     '/Type': '/FontDescriptor',
     '/XHeight': 519},
    '/LastChar': 255,
    '/Subtype': '/TrueType',
    '/Type': '/Font',
    '/Widths': [750,
     750,
     750,
     750,
     750,
     750,
     750,
     750,
     750,
     750,
     750,
     750,
     750,
     750,
     750,
     750,
     750,
     750,
     750,
     750,
     750,
     750,
     750,
     750,
     750,
     750,
     750,
     750,
     750,
     750,
     750,
     750,
     278,
     278,
     355,
     556,
     556,
     889,
     667,
     191,
     333,
     333,
     389,
     584,
     278,
     333,
     278,
     278,
     556,
     556,
     556,
     556,
     556,
     556,
     556,
     556,
     556,
     556,
     278,
     278,
     584,
     584,
     584,
     556,
     1015,
     667,
     667,
     722,
     722,
     667,
     611,
     778,
     722,
     278,
     500,
     667,
     556,
     833,
     722,
     778,
     667,
     778,
     722,
     667,
     611,
     722,
     667,
     944,
     667,
     667,
     611,
     278,
     278,
     278,
     469,
     556,
     333,
     556,
     556,
     500,
     556,
     556,
     278,
     556,
     556,
     222,
     222,
     500,
     222,
     833,
     556,
     556,
     556,
     556,
     333,
     500,
     278,
     556,
     500,
     722,
     500,
     500,
     500,
     334,
     260,
     334,
     584,
     350,
     556,
     350,
     222,
     556,
     333,
     1000,
     556,
     556,
     333,
     1000,
     667,
     333,
     1000,
     350,
     611,
     350,
     350,
     222,
     222,
     333,
     333,
     350,
     556,
     1000,
     333,
     1000,
     500,
     333,
     944,
     350,
     500,
     667,
     278,
     333,
     556,
     556,
     556,
     556,
     260,
     556,
     333,
     737,
     370,
     556,
     584,
     333,
     737,
     552,
     400,
     549,
     333,
     333,
     333,
     576,
     537,
     333,
     333,
     333,
     365,
     556,
     834,
     834,
     834,
     611,
     667,
     667,
     667,
     667,
     667,
     667,
     1000,
     722,
     667,
     667,
     667,
     667,
     278,
     278,
     278,
     278,
     722,
     722,
     778,
     778,
     778,
     778,
     778,
     584,
     778,
     722,
     722,
     722,
     722,
     667,
     667,
     611,
     556,
     556,
     556,
     556,
     556,
     556,
     889,
     500,
     556,
     556,
     556,
     556,
     278,
     278,
     278,
     278,
     556,
     556,
     556,
     556,
     556,
     556,
     556,
     549,
     611,
     556,
     556,
     556,
     556,
     500,
     556,
     500]},
   '/TT2': {'/BaseFont': '/Tahoma-Bold',
    '/Encoding': '/WinAnsiEncoding',
    '/FirstChar': 0,
    '/FontDescriptor': {'/Ascent': 1065,
     '/CapHeight': 727,
     '/Descent': -216,
     '/Flags': 32,
     '/FontBBox': [-698, -216, 1625, 1065],
     '/FontFamily': 'Tahoma',
     '/FontName': '/Tahoma-Bold',
     '/FontStretch': '/Normal',
     '/FontWeight': 700,
     '/ItalicAngle': 0,
     '/StemV': 172,
     '/Type': '/FontDescriptor',
     '/XHeight': 548},
    '/LastChar': 255,
    '/Subtype': '/TrueType',
    '/Type': '/Font',
    '/Widths': [1000,
     1000,
     1000,
     1000,
     1000,
     1000,
     1000,
     1000,
     1000,
     1000,
     1000,
     1000,
     1000,
     1000,
     1000,
     1000,
     1000,
     1000,
     1000,
     1000,
     1000,
     1000,
     1000,
     1000,
     1000,
     1000,
     1000,
     1000,
     1000,
     1000,
     1000,
     1000,
     293,
     343,
     489,
     818,
     637,
     1199,
     781,
     275,
     454,
     454,
     637,
     818,
     313,
     431,
     313,
     577,
     637,
     637,
     637,
     637,
     637,
     637,
     637,
     637,
     637,
     637,
     363,
     363,
     818,
     818,
     818,
     566,
     920,
     685,
     686,
     667,
     757,
     615,
     581,
     745,
     764,
     483,
     500,
     696,
     572,
     893,
     771,
     770,
     657,
     770,
     726,
     633,
     612,
     739,
     675,
     1028,
     685,
     670,
     623,
     454,
     577,
     454,
     818,
     637,
     546,
     599,
     632,
     527,
     629,
     594,
     382,
     629,
     640,
     302,
     363,
     603,
     302,
     954,
     640,
     617,
     629,
     629,
     434,
     515,
     416,
     640,
     579,
     890,
     604,
     576,
     526,
     623,
     637,
     623,
     818,
     637,
     637,
     637,
     275,
     637,
     489,
     1000,
     637,
     637,
     546,
     1676,
     633,
     425,
     1037,
     637,
     623,
     637,
     637,
     275,
     275,
     489,
     489,
     637,
     637,
     909,
     546,
     861,
     515,
     425,
     985,
     637,
     526,
     670,
     293,
     343,
     637,
     637,
     637,
     637,
     637,
     637,
     546,
     929,
     508,
     703,
     818,
     431,
     929,
     637,
     520,
     818,
     539,
     539,
     546,
     651,
     637,
     363,
     546,
     539,
     539,
     703,
     1128,
     1128,
     1128,
     566,
     685,
     685,
     685,
     685,
     685,
     685,
     989,
     667,
     615,
     615,
     615,
     615,
     483,
     483,
     483,
     483,
     774,
     771,
     770,
     770,
     770,
     770,
     770,
     818,
     770,
     739,
     739,
     739,
     739,
     670,
     659,
     646,
     599,
     599,
     599,
     599,
     599,
     599,
     937,
     527,
     594,
     594,
     594,
     594,
     302,
     302,
     302,
     302,
     620,
     640,
     617,
     617,
     617,
     617,
     617,
     818,
     617,
     640,
     640,
     640,
     640,
     576,
     629,
     576]},
   '/TT3': {'/BaseFont': '/Arial-BoldMT',
    '/Encoding': '/WinAnsiEncoding',
    '/FirstChar': 0,
    '/FontDescriptor': {'/Ascent': 1018,
     '/CapHeight': 716,
     '/Descent': -376,
     '/Flags': 32,
     '/FontBBox': [-628, -376, 2000, 1018],
     '/FontFamily': 'Arial',
     '/FontName': '/Arial-BoldMT',
     '/FontStretch': '/Normal',
     '/FontWeight': 700,
     '/ItalicAngle': 0,
     '/StemV': 136,
     '/Type': '/FontDescriptor',
     '/XHeight': 519},
    '/LastChar': 255,
    '/Subtype': '/TrueType',
    '/Type': '/Font',
    '/Widths': [750,
     750,
     750,
     750,
     750,
     750,
     750,
     750,
     750,
     750,
     750,
     750,
     750,
     750,
     750,
     750,
     750,
     750,
     750,
     750,
     750,
     750,
     750,
     750,
     750,
     750,
     750,
     750,
     750,
     750,
     750,
     750,
     278,
     333,
     474,
     556,
     556,
     889,
     722,
     238,
     333,
     333,
     389,
     584,
     278,
     333,
     278,
     278,
     556,
     556,
     556,
     556,
     556,
     556,
     556,
     556,
     556,
     556,
     333,
     333,
     584,
     584,
     584,
     611,
     975,
     722,
     722,
     722,
     722,
     667,
     611,
     778,
     722,
     278,
     556,
     722,
     611,
     833,
     722,
     778,
     667,
     778,
     722,
     667,
     611,
     722,
     667,
     944,
     667,
     667,
     611,
     333,
     278,
     333,
     584,
     556,
     333,
     556,
     611,
     556,
     611,
     556,
     333,
     611,
     611,
     278,
     278,
     556,
     278,
     889,
     611,
     611,
     611,
     611,
     389,
     556,
     333,
     611,
     556,
     778,
     556,
     556,
     500,
     389,
     280,
     389,
     584,
     350,
     556,
     350,
     278,
     556,
     500,
     1000,
     556,
     556,
     333,
     1000,
     667,
     333,
     1000,
     350,
     611,
     350,
     350,
     278,
     278,
     500,
     500,
     350,
     556,
     1000,
     333,
     1000,
     556,
     333,
     944,
     350,
     500,
     667,
     278,
     333,
     556,
     556,
     556,
     556,
     280,
     556,
     333,
     737,
     370,
     556,
     584,
     333,
     737,
     552,
     400,
     549,
     333,
     333,
     333,
     576,
     556,
     333,
     333,
     333,
     365,
     556,
     834,
     834,
     834,
     611,
     722,
     722,
     722,
     722,
     722,
     722,
     1000,
     722,
     667,
     667,
     667,
     667,
     278,
     278,
     278,
     278,
     722,
     722,
     778,
     778,
     778,
     778,
     778,
     584,
     778,
     722,
     722,
     722,
     722,
     667,
     667,
     611,
     556,
     556,
     556,
     556,
     556,
     556,
     889,
     556,
     556,
     556,
     556,
     556,
     278,
     278,
     278,
     278,
     611,
     611,
     611,
     611,
     611,
     611,
     611,
     549,
     611,
     611,
     611,
     611,
     611,
     556,
     611,
     556]},
   '/TT4': {'/BaseFont': '/TimesNewRomanPSMT',
    '/Encoding': '/WinAnsiEncoding',
    '/FirstChar': 0,
    '/FontDescriptor': {'/Ascent': 1007,
     '/CapHeight': 662,
     '/Descent': -307,
     '/Flags': 34,
     '/FontBBox': [-568, -307, 2000, 1007],
     '/FontFamily': 'Times New Roman',
     '/FontName': '/TimesNewRomanPSMT',
     '/FontStretch': '/Normal',
     '/FontWeight': 400,
     '/ItalicAngle': 0,
     '/StemV': 80,
     '/Type': '/FontDescriptor',
     '/XHeight': 448},
    '/LastChar': 255,
    '/Subtype': '/TrueType',
    '/Type': '/Font',
    '/Widths': [778,
     778,
     778,
     778,
     778,
     778,
     778,
     778,
     778,
     778,
     778,
     778,
     778,
     778,
     778,
     778,
     778,
     778,
     778,
     778,
     778,
     778,
     778,
     778,
     778,
     778,
     778,
     778,
     778,
     778,
     778,
     778,
     250,
     333,
     408,
     500,
     500,
     833,
     778,
     180,
     333,
     333,
     500,
     564,
     250,
     333,
     250,
     278,
     500,
     500,
     500,
     500,
     500,
     500,
     500,
     500,
     500,
     500,
     278,
     278,
     564,
     564,
     564,
     444,
     921,
     722,
     667,
     667,
     722,
     611,
     556,
     722,
     722,
     333,
     389,
     722,
     611,
     889,
     722,
     722,
     556,
     722,
     667,
     556,
     611,
     722,
     722,
     944,
     722,
     722,
     611,
     333,
     278,
     333,
     469,
     500,
     333,
     444,
     500,
     444,
     500,
     444,
     333,
     500,
     500,
     278,
     278,
     500,
     278,
     778,
     500,
     500,
     500,
     500,
     333,
     389,
     278,
     500,
     500,
     722,
     500,
     500,
     444,
     480,
     200,
     480,
     541,
     350,
     500,
     350,
     333,
     500,
     444,
     1000,
     500,
     500,
     333,
     1000,
     556,
     333,
     889,
     350,
     611,
     350,
     350,
     333,
     333,
     444,
     444,
     350,
     500,
     1000,
     333,
     980,
     389,
     333,
     722,
     350,
     444,
     722,
     250,
     333,
     500,
     500,
     500,
     500,
     200,
     500,
     333,
     760,
     276,
     500,
     564,
     333,
     760,
     500,
     400,
     549,
     300,
     300,
     333,
     576,
     453,
     333,
     333,
     300,
     310,
     500,
     750,
     750,
     750,
     444,
     722,
     722,
     722,
     722,
     722,
     722,
     889,
     667,
     611,
     611,
     611,
     611,
     333,
     333,
     333,
     333,
     722,
     722,
     722,
     722,
     722,
     722,
     722,
     564,
     722,
     722,
     722,
     722,
     722,
     722,
     556,
     500,
     444,
     444,
     444,
     444,
     444,
     444,
     667,
     444,
     444,
     444,
     444,
     444,
     278,
     278,
     278,
     278,
     500,
     500,
     500,
     500,
     500,
     500,
     500,
     549,
     500,
     500,
     500,
     500,
     500,
     500,
     500,
     500]},
   '/TT5': {'/BaseFont': '/ZNNWAA+LucidaCalligraphy-Italic',
    '/Encoding': '/WinAnsiEncoding',
    '/FirstChar': 32,
    '/FontDescriptor': {'/Ascent': 958,
     '/CapHeight': 741,
     '/Descent': -325,
     '/Flags': 98,
     '/FontBBox': [-290, -325, 1287, 958],
     '/FontFamily': 'Lucida Calligraphy',
     '/FontFile2': {'/Filter': '/FlateDecode', '/Length1': 11512},
     '/FontName': '/ZNNWAA+LucidaCalligraphy-Italic',
     '/FontStretch': '/Normal',
     '/FontWeight': 400,
     '/ItalicAngle': -12,
     '/StemV': 100,
     '/Type': '/FontDescriptor',
     '/XHeight': 541},
    '/LastChar': 121,
    '/Subtype': '/TrueType',
    '/ToUnicode': {'/Filter': '/FlateDecode'},
    '/Type': '/Font',
    '/Widths': [332,
     0,
     0,
     0,
     0,
     0,
     0,
     0,
     0,
     0,
     0,
     0,
     283,
     0,
     283,
     0,
     0,
     0,
     0,
     0,
     0,
     0,
     0,
     0,
     0,
     0,
     0,
     0,
     0,
     0,
     0,
     0,
     0,
     0,
     786,
     0,
     0,
     735,
     0,
     0,
     0,
     0,
     0,
     0,
     669,
     0,
     0,
     0,
     0,
     0,
     0,
     581,
     715,
     0,
     0,
     0,
     0,
     0,
     0,
     0,
     0,
     0,
     0,
     0,
     0,
     668,
     615,
     546,
     668,
     542,
     409,
     614,
     664,
     376,
     0,
     631,
     339,
     1024,
     711,
     583,
     664,
     0,
     563,
     451,
     456,
     697,
     705,
     945,
     710,
     693]}},
  '/XObject': {'/Im0': {'/BitsPerComponent': 8,
    '/ColorSpace': ['/ICCBased', IndirectObject(970, 0)],
    '/DecodeParms': {'/BitsPerComponent': 8, '/Colors': 3, '/Columns': 309},
    '/Filter': '/FlateDecode',
    '/Height': 309,
    '/Name': '/X',
    '/Subtype': '/Image',
    '/Type': '/XObject',
    '/Width': 309}}},
 '/Rotate': 90,
 '/StructParents': 0,
 '/Type': '/Page'}
>>> pdf_writer = PyPDF2.PdfFileWriter()
>>> pdf_writer.addPage(page)
>>> result_pdf_file = open('rotated_pdf.pdf', 'wb')
>>> result_pdf_file.close()
>>> minutes_file.close()
>>> ls
>>> minutes_file = open('meetingminutes.pdf', 'rb')
>>> pdf_reader = PyPDF2.PdfFileREader(minutes_file)
>>> pdf_reader = PyPDF2.PdfFileReader(minutes_file)
>>> minutes_first_page = pdf_reader.getPage(0)
>>> pdf_watermark_reader = PyPDF2.PdfFileReader(open('watermark.pdf', 'rb'))
>>> minutes_first_page.mergePage(pdf_watermark_reader.getPage(0))
>>> pdf_writer = PyPDF2.PdfFileWriter()
>>> pdf_writer.addPage(minutes_first_page)
>>> for page_num in range(1, pdf_reader.numPages):
...     page_obj = pdf_reader.getPage(page_num)
...     pdf_writer.addPage(page_obj)
...
>>> result_pdf_file = open('watermaked-cover.pdf', 'wb')
>>> pdf_writer.write(result_pdf_file)
>>> minutes_file.close()
>>> result_pdf_file.close()
>>> pdf_watermark_reader.close()
>>> pdf_file = open('meetingminutes.pdf', 'rb')
>>> pdf_reader = PyPDF2.PdfFileReader(pdf_file)
>>> pdf_writer = PyPDF2.PdfFileWriter()
>>> for page_num in range(pdf_reader.numPages):
...     pdf_writer.addPage(pdf_reader.getPage(page_num))
...
>>> pdf_writer.encrypt('swordfish')
>>> result_pdf = open('encryptedminutes.pdf', 'wb')
>>> pdf_writer.write(result_pdf)
>>> result_pdf.close()
>>> import docx
>>> import docx
>>> doc = docx.Document('demo.docx')
>>> len(doc.paragraphs)
7
>>> doc.paragraphs[0].text
'Document Title'
>>> doc.paragraphs[1].text
'A plain paragraph with some bold and some italic'
>>> len(doc.paragraphs[1].runs)
5
>>> doc.paragraphs[1].runs[0].text
'A plain paragraph with'
>>> doc.paragraphs[1].runs[1].text
' some '
>>> doc.paragraphs[1].runs[2].text
'bold'
>>> doc.paragraphs[1].runs[3].text
' and some '
>>> doc.paragraphs[1].runs[4].text
'italic'
>>> import readDocx
>>> import readDocx
>>> print(readDocx.getText('demo.docx'))
>>> doc = docx.Document('demo.docx')
>>> doc.paragraphs[0].text
'Document Title'
>>> doc.paragraphs[0].style
_ParagraphStyle('Title') id: 4646374312
>>> doc.paragraphs[0].style = 'Normal'
>>> doc.paragraphs[1].text
'A plain paragraph with some bold and some italic'
>>> (doc.paragraphs[1].runs[0].text, doc.paragraphs[1].runs[1].text, doc.
... paragraphs[1].runs[2].text, doc.paragraphs[1].runs[3].text)
...
('A plain paragraph with', ' some ', 'bold', ' and some ')
>>> doc.paragraphs[1].runs[0].style = 'QuoteChar'
>>> doc.paragraphs[1].runs[1].underline = True
>>> doc.paragraphs[1].runs[3].underline = True
>>> doc.save('restyled.docx')
>>> doc = docx.Document()
>>> doc.add_paragraph('Hello, world!')
<docx.text.paragraph.Paragraph at 0x114f6f860>
>>> doc.save('helloworld.docx')
>>> ls
>>> doc = docx.Document()
>>> doc.add_paragraph('Hello world!')
<docx.text.paragraph.Paragraph at 0x114f7d2e8>
>>> para_obj1 = doc.add_paragraph('This is a second paragraph')
>>> para_obj2 = doc.add_paragraph('This is yet another paragraph.')
>>> para_obj1.add_run('This text is being added to the second paragraph.')
<docx.text.run.Run at 0x11501abe0>
>>> doc.save('multiple-paragraphs.docx')
>>> doc = docx.Document()
>>> doc.add_heading('Header 0', 0)
<docx.text.paragraph.Paragraph at 0x11502cb38>
>>> doc.add_heading('Header1', 1)
<docx.text.paragraph.Paragraph at 0x11501f978>
>>> doc.add_heading('Header 2', 2)
<docx.text.paragraph.Paragraph at 0x1150495c0>
>>> doc.add_heading('Header 3', 3)
<docx.text.paragraph.Paragraph at 0x11502c9e8>
>>> doc.add_heading('Header 4', 4)
<docx.text.paragraph.Paragraph at 0x1150321d0>
>>> doc.save('headings.docx')
>>> doc = docx.Document()
>>> doc.add_paragraph('This is on the first page!')
<docx.text.paragraph.Paragraph at 0x115032278>
>>> doc.paragraphs[0].runs[0].add_break(docx.enum.text.WD_BREAK.PAGE)
>>> doc.add_paragraph('This is on the second page!')
<docx.text.paragraph.Paragraph at 0x1150325c0>
>>> doc.save('twoPage.docx')
>>> doc.add_picture('zophie.png', width=docx.shared.Inches(1),
... height=docx.shared.Cm(4))
...
<docx.shape.InlineShape at 0x115037278>
>>> %history -o -p -f shell_examples.txt
